def minimax(node, depth, maximizingPlayer):
    if depth == 0 or node.is_terminal():
        return node.value()

    if maximizingPlayer:
        bestValue = float('-inf')
        for child in node.children():
            v = minimax(child, depth-1, False)
            bestValue = max(bestValue, v)
        return bestValue

    else:
        bestValue = float('inf')
        for child in node.children():
            v = minimax(child, depth-1, True)
            bestValue = min(bestValue, v)
        return bestValue

class Node:
    def _init_(self, state, player):
        self.state = state
        self.player = player

    def children(self):
        # generate and return a list of child nodes
        pass

    def is_terminal(self):
        # return True if the node is a terminal node
        pass

    def value(self):
        # return the value of the node
        pass
