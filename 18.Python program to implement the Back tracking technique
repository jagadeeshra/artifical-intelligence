def backtrack(candidates, target, start, path, res):
    if target < 0:
        return
    if target == 0:
        res.append(path)
        return
    for i in range(start, len(candidates)):
        backtrack(candidates, target - candidates[i], i, path + [candidates[i]], res)

def combinationSum(candidates, target):
    res = []
    candidates.sort()
    backtrack(candidates, target, 0, [], res)
    return res

# Example usage
candidates = [2,3,6,7]
target = 7
print(combinationSum(candidates, target))
